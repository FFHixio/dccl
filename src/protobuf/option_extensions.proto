import "google/protobuf/descriptor.proto";

package goby;

message DCCLFieldOptions
{
  // what encoder / decoder should we use?
  optional string codec = 1 ;//[default = "_default"];
  // leave this field out of DCCL tranmissions (has_field() will be false on receipt)
  optional bool omit = 2 [default = false];
  // set true for fields in the header (will *not* be encrypte)d
  optional bool in_head = 3 [default = false];
  
  
  // double, float
  optional int32 precision = 4 [default = 0];
  // int, double, float
  optional double min = 5 [default = 0];
  optional double max = 6 [default = 0];

  // static
  optional string static_value = 8 [default = ""];
  
  // string, bytes
  optional uint32 max_length = 9 [default = 0];  

  // any `repeated` field
  optional uint32 max_repeat = 10 [default = 1];


  message LegacyCCLFieldOptions
  {
    optional uint32 thrust_mode_tag = 1;
    optional uint32 bit_size = 2;
  }
  optional LegacyCCLFieldOptions ccl = 100;

  message ArithmeticOptions
  {
    required string model = 1;
    optional bool debug_assert = 2 [default = false];
  }
  optional ArithmeticOptions arithmetic = 200;
  

}

message DCCLMessageOptions
{
  required int32 id = 1;
  required uint32 max_bytes = 2;

  optional string codec = 3; // [default = "_default"];
}



extend .google.protobuf.FieldOptions
{
  // Email from liujisi@google.com on 7.22.2011: Please use 1009 for all types of options.
  // --------------------------------
  // Project:  Goby Underwater Autonomy Project
  // Contact:  Toby Schneider <tes@mit.edu>
  // Web site: https://launchpad.net/goby
  // Extensions: 1009 (all types)
  // --------------------------------
  optional GobyFieldOptions field = 1009; 
}

extend .google.protobuf.MessageOptions
{  
  optional GobyMessageOptions msg = 1009;
}


message GobyFieldOptions
{
  optional DCCLFieldOptions dccl = 1;
  
  optional string description = 100;
  optional string example = 101;
  
  // used in goby_moos_app.proto
  optional string moos_global = 102;

  message ConfigurationOptions
  {
    optional string cli_short = 1;
    enum ConfigAction
    {
      ALWAYS = 1;
      NEVER = 2;
      ADVANCED = 3;
    }
    optional ConfigAction action = 2 [default = ALWAYS];
  }
  optional ConfigurationOptions cfg = 200;
}

message GobyMessageOptions
{
  optional DCCLMessageOptions dccl = 1;
}
