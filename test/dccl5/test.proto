import "google/protobuf/descriptor.proto";
import "dccl/protobuf/option_extensions.proto";

// required fields will be filled in for you by ApplicationBase
// if you choose not to do so yourself
message Header
{
  //
  // time
  //

  // result of goby::util::as<std::string>(goby_time())
  // e.g. "2002-01-20 23:59:59.000"
  required string time = 10 [(goby.field).dccl.codec="_time",
                             (goby.field).dccl.in_head=true,
                              (queue_field).is_time=true];

  //
  // source
  //
  required string source_platform = 11 [(goby.field).dccl.codec="_platform<->modem_id",
                                        (goby.field).dccl.in_head=true,
                                        (queue_field).is_src=true];
  optional string source_app = 12 [(goby.field).dccl.omit=true];
  
  //
  // destination
  //
  enum PublishDestination { PUBLISH_SELF = 1; PUBLISH_OTHER = 2; PUBLISH_ALL = 3; }
  optional PublishDestination dest_type = 13 [default = PUBLISH_SELF, (goby.field).dccl.in_head=true];
  
  optional string dest_platform = 14 [(goby.field).dccl.codec="_platform<->modem_id",
                                      (goby.field).dccl.in_head=true,
                                      (queue_field).is_dest=true]; // required if dest_type == other

}

message GobyMessage
{
  option (goby.msg).dccl.id = 4;
  option (goby.msg).dccl.max_bytes = 32;

  required string telegram = 1 [(goby.field).dccl.max_length=10]; 
  required Header header = 2;
}

message QueueFieldOptions
{
  optional bool is_src = 1 [default = false];
  optional bool is_dest = 2 [default = false];
  optional bool is_time = 3 [default = false];
}

extend .google.protobuf.FieldOptions
{
  optional QueueFieldOptions queue_field = 50001; 
}
